/**
 * AffiliateAI Popup Injector SDK
 * Production-ready version with comprehensive error handling,
 * performance optimizations, and security features
 */
class PopupInjector{constructor(e={}){this.validateConfig(e),this.siteId=e.siteId,this.apiKey=e.apiKey,this.baseUrl=e.baseUrl||"https://api.affiliateai.com",this.cdnUrl=e.cdnUrl||"https://cdn.affiliateai.com",this.options={scrollThreshold:e.scrollThreshold||.7,timeDelay:e.timeDelay||5e3,maxRetries:e.maxRetries||3,retryDelay:e.retryDelay||1e3,enableLogging:e.enableLogging||!1,respectDoNotTrack:!1!==e.respectDoNotTrack,maxPopupsPerSession:e.maxPopupsPerSession||3,cooldownPeriod:e.cooldownPeriod||3e5,...e.options},this.state={initialized:!1,popupQueue:[],triggers:{scroll:!1,exitIntent:!1,timeDelay:!1},popupsShown:0,lastPopupTime:0,retryCount:0},this.handleScroll=this.throttle(this.handleScroll.bind(this),100),this.handleMouseOut=this.handleMouseOut.bind(this),this.handleMessage=this.handleMessage.bind(this),this.handleVisibilityChange=this.handleVisibilityChange.bind(this),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.init()):this.init()}validateConfig(e){if(!e.siteId||"string"!=typeof e.siteId)throw new Error("PopupInjector: siteId is required and must be a string");if(!e.apiKey||"string"!=typeof e.apiKey)throw new Error("PopupInjector: apiKey is required and must be a string")}async init(){try{if(this.state.initialized)return void this.log("SDK already initialized");if(this.options.respectDoNotTrack&&this.isDoNotTrackEnabled())return void this.log("Do Not Track is enabled, skipping initialization");if(!this.canShowPopup())return void this.log("Session popup limit reached or cooldown active");this.log("Initializing PopupInjector SDK"),await Promise.all([this.loadStylesheet(),this.fetchRecommendations()]),this.setupEventListeners(),this.state.initialized=!0,this.log("PopupInjector SDK initialized successfully")}catch(e){this.logError("Failed to initialize SDK",e),this.handleInitializationError(e)}}async loadStylesheet(){return new Promise((e,t)=>{if(document.querySelector('link[href*="popup-styles.css"]'))return void e();const i=document.createElement("link");i.href=`${this.cdnUrl}/popup-styles.css?v=${Date.now()}`,i.rel="stylesheet",i.crossOrigin="anonymous";const s=setTimeout(()=>{t(new Error("Stylesheet loading timeout"))},1e4);i.onload=()=>{clearTimeout(s),e()},i.onerror=()=>{clearTimeout(s),t(new Error("Failed to load stylesheet"))},document.head.appendChild(i)})}setupEventListeners(){window.addEventListener("scroll",this.handleScroll,{passive:!0}),document.addEventListener("mouseleave",this.handleMouseOut),window.addEventListener("message",this.handleMessage),document.addEventListener("visibilitychange",this.handleVisibilityChange),setTimeout(()=>{this.hasAnyTriggerFired()||this.canShowPopup()&&this.triggerPopup("time_delay")},this.options.timeDelay)}handleScroll(){if(!this.state.triggers.scroll&&this.canShowPopup()){const e=window.scrollY/(document.documentElement.scrollHeight-window.innerHeight);e>=this.options.scrollThreshold&&(this.state.triggers.scroll=!0,this.triggerPopup("scroll"))}}handleMouseOut(e){this.state.triggers.exitIntent||!this.canShowPopup()||e.clientY>0||null!==e.relatedTarget||(this.state.triggers.exitIntent=!0,this.triggerPopup("exit_intent"))}handleMessage(e){const t=[this.baseUrl,window.location.origin];t.some(t=>e.origin.includes(new URL(t).hostname))&&e.data?.type==="SHOW_POPUP"&&this.canShowPopup()&&this.triggerPopup("external",e.data.contentId)}handleVisibilityChange(){document.hidden?this.log("Page hidden, pausing popup logic"):this.log("Page visible, resuming popup logic")}async fetchRecommendations(e=null){const t=this.options.maxRetries;for(let i=1;i<=t;i++)try{const t=e?`${this.baseUrl}/v1/recommendations/${encodeURIComponent(e)}`:`${this.baseUrl}/api/recommendations/widget/${encodeURIComponent(window.location.href)}`,s=new AbortController,o=setTimeout(()=>s.abort(),1e4),n=await fetch(t,{method:"GET",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json","X-Site-ID":this.siteId},signal:s.signal});if(clearTimeout(o),!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);const a=await n.json();if(a.recommendations&&Array.isArray(a.recommendations))return this.state.popupQueue=a.recommendations.filter(this.validateRecommendation),this.log(`Fetched ${this.state.popupQueue.length} valid recommendations`),a;throw new Error("Invalid response format")}catch(e){if(this.logError(`Fetch attempt ${i} failed`,e),i===t)throw e;await this.delay(this.options.retryDelay*Math.pow(2,i-1))}}validateRecommendation(e){return e&&"string"==typeof e.title&&"string"==typeof e.affiliate_url&&"string"==typeof e.image_url&&""!==e.title.trim()&&this.isValidUrl(e.affiliate_url)&&this.isValidUrl(e.image_url)}isValidUrl(e){try{return new URL(e),!0}catch{return!1}}canShowPopup(){const e=Date.now(),t=e-this.state.lastPopupTime;return this.state.popupsShown<this.options.maxPopupsPerSession&&t>=this.options.cooldownPeriod}hasAnyTriggerFired(){return Object.values(this.state.triggers).some(e=>e)}triggerPopup(e,t=null){this.canShowPopup()?0===this.state.popupQueue.length?this.log("No recommendations available for popup"):(this.log(`Triggering popup with trigger: ${e}`),this.renderPopup(this.state.popupQueue,e)):this.log("Cannot show popup due to session limits or cooldown")}renderPopup(e,t){try{const i=document.querySelector(".aai-popup");i&&i.remove();const s=this.createPopupElement(e);document.body.appendChild(s),requestAnimationFrame(()=>{s.classList.add("aai-popup-show")}),this.attachPopupEventListeners(s,e,t),this.updateSessionState(),setTimeout(()=>{s.parentNode&&this.closePopup(s)},3e4)}catch(e){this.logError("Failed to render popup",e)}}createPopupElement(e){const t=document.createElement("div");t.className="aai-popup",t.setAttribute("role","dialog"),t.setAttribute("aria-labelledby","aai-popup-title"),t.setAttribute("aria-modal","true");const i=e.slice(0,4).map(e=>this.sanitizeProduct(e));return t.innerHTML=`
      <div class="aai-popup-overlay"></div>
      <div class="aai-popup-content">
        <button class="aai-close" type="button" aria-label="Close popup">Ã—</button>
        <h3 id="aai-popup-title">Recommended for You</h3>
        <div class="aai-products">
          ${i.map(e=>`
            <a href="${e.affiliate_url}" 
               class="aai-product" 
               target="_blank" 
               rel="noopener noreferrer"
               data-product-id="${e.id||""}">
              <img src="${e.image_url}" 
                   alt="${e.title}" 
                   loading="lazy"
                   onerror="this.style.display='none'" />
              <div class="aai-details">
                <h4>${e.title}</h4>
                <p class="aai-price">${e.price||"View Details"}</p>
              </div>
            </a>
          `).join("")}
        </div>
        <div class="aai-footer">
          <small>Affiliate links - we may earn a commission</small>
        </div>
      </div>
    `,t}sanitizeProduct(e){const t=document.createElement("div");return{...e,title:(t.textContent=e.title,t.innerHTML),price:e.price?(t.textContent=e.price,t.innerHTML):""}}attachPopupEventListeners(e,t,i){const s=e.querySelector(".aai-close");s.addEventListener("click",()=>this.closePopup(e));const o=e.querySelector(".aai-popup-overlay");o.addEventListener("click",()=>this.closePopup(e));const n=e=>{e.key==="Escape"&&(this.closePopup(e),document.removeEventListener("keydown",n))};document.addEventListener("keydown",n);const a=e.querySelectorAll(".aai-product");a.forEach((e,s)=>{e.addEventListener("click",()=>{this.trackClick(t[s],i)})}),this.logImpression(t,i)}closePopup(e){e.classList.add("aai-popup-hide"),setTimeout(()=>{e.parentNode&&e.remove()},300)}updateSessionState(){this.state.popupsShown++,this.state.lastPopupTime=Date.now()}async logImpression(e,t){try{await fetch(`${this.baseUrl}/api/recommendations/impression`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({siteId:this.siteId,recommendations:e.map(e=>({id:e.id,title:e.title})),triggerType:t,url:window.location.href,timestamp:Date.now(),userAgent:navigator.userAgent})})}catch(e){this.logError("Failed to log impression",e)}}async trackClick(e,t){try{await fetch(`${this.baseUrl}/api/recommendations/click`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({siteId:this.siteId,productId:e.id,triggerType:t,url:window.location.href,timestamp:Date.now()})})}catch(e){this.logError("Failed to track click",e)}}isDoNotTrackEnabled(){return"1"===navigator.doNotTrack||"1"===window.doNotTrack||"1"===navigator.msDoNotTrack}handleInitializationError(e){this.options.enableLogging&&console.warn("PopupInjector failed to initialize:",e.message)}throttle(e,t){let i;return function(){const s=arguments,o=this;i||(e.apply(o,s),i=!0,setTimeout(()=>i=!1,t))}}delay(e){return new Promise(t=>setTimeout(t,e))}log(e){this.options.enableLogging&&console.log(`[PopupInjector] ${e}`)}logError(e,t){this.options.enableLogging&&console.error(`[PopupInjector] ${e}:`,t)}destroy(){window.removeEventListener("scroll",this.handleScroll),document.removeEventListener("mouseleave",this.handleMouseOut),window.removeEventListener("message",this.handleMessage),document.removeEventListener("visibilitychange",this.handleVisibilityChange);const e=document.querySelector(".aai-popup");e&&e.remove(),this.state.initialized=!1,this.log("SDK destroyed")}getState(){return{...this.state}}updateConfig(e){this.options={...this.options,...e.options},this.log("Configuration updated")}}"undefined"!=typeof module&&module.exports?module.exports=PopupInjector:"undefined"!=typeof window&&(window.PopupInjector=PopupInjector);